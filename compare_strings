using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;
using System.Linq;
using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;

namespace MyTest2
{
    /// <summary>
    /// Description of compare_strings.
    /// </summary>
    [TestModule("D3C1D895-C565-4E58-8229-ED741AC72202", ModuleType.UserCode, 1)]
    public class compare_strings : ITestModule
    {
        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public compare_strings()
        {
            // Do not delete - a parameterless constructor is required!
        }

        /// <summary>
        /// Performs the playback of actions in this module.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        void ITestModule.Run()
        {
        	Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.0;
            
// Start of Userscript // *********************************************************************************     
			/* create Repo and values to check (could/should be done with settable variables (and possibly more than just 3) in the future */
        	Sorting_of_Sheets_1765Repository repo = new Sorting_of_Sheets_1765Repository();
        	string value1 = repo.EBMobileView.showall_first.InnerText.ToString();
        	string value2 = repo.EBMobileView.showall_second.InnerText.ToString();
        	string value3 = repo.EBMobileView.showall_third.InnerText.ToString();
        	
        	
        	// if any of the checked titles are the same, then part-numbers should be equal and be compared instead.
        	if((value1 == value2)&&(value1 == value3)){ //if all are the same, change all numbers
        		value1 = repo.EBMobileView.showall_first_number.InnerText.ToString(); 
        		value2 = repo.EBMobileView.showall_second_number.InnerText.ToString();
        		value3 = repo.EBMobileView.showall_third_number.InnerText.ToString();
        	}
        	if(value1 == value2){ //if only 1&2 are the same, change those.
        		value1 = repo.EBMobileView.showall_first_number.InnerText.ToString();
        		value2 = repo.EBMobileView.showall_second_number.InnerText.ToString();
        	}
        	if(value2 == value3){ //if 2&3 are the same, change those.
        		value2 = repo.EBMobileView.showall_second_number.InnerText.ToString();
        		value3 = repo.EBMobileView.showall_third_number.InnerText.ToString();
        	}
        	Report.Info(value1+ " \n " +value2+ " \n " +value3); 
			StringComparer OrdCmp = StringComparer.Ordinal; //create comparer so that list can be sorted
        	List<string> list = new List<string>();
        	list.Add(value1);
        	list.Add(value2);
        	list.Add(value3);
        	list.Sort(OrdCmp); //sorted list on how we expect it to look like.
        	List<string> listorig = new List<string>(); //what the list looks like in ebmv
        	listorig.Add(value1);
        	listorig.Add(value2);
        	listorig.Add(value3);
			
        	
        	
        	
        	if(Enumerable.SequenceEqual(list, listorig)){ //check if lists are the same (if yes, they are indeed sorted)
        		Report.Success("Validation", "list (first 3 entries) is sorted correctly");
        	}
        	else{
        		Ranorex.Validate.Fail("The input values are not sorted correctly, pls fix");
        	}
        }
    }
}
